<?xml version="1.0" encoding="utf-8"?>
<!--
	Componente para a tela de login do sistema
-->

<les:ModuleTitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
						xmlns:les="modulos.sistema.*" 
						xmlns:comp="com.adobe.flex.extras.controls.*"
						xmlns:extra="br.com.thinklab.util.control.*"
	width="800" height="550" creationComplete="init()" title="Atribuição de Corretores" showCloseButton="true" close="fechaJanela()" layout="absolute">
		
		<mx:Script>
			<![CDATA[
				import bean.Utilitarios.CastDeEntidades;
				import bean.roteiros.Roteiro;
				import mx.effects.Rotate;
				import mx.collections.ArrayCollection;
				import mx.utils.ArrayUtil;
				import eventos.UsuarioEvent;
				import bean.acesso.*;
				import eventos.RespostaLoginEvent;
				import eventos.FechaPopupEvent;
				import mx.utils.Base64Decoder;
				import mx.controls.Image;
				import com.adobe.serialization.json.JSON;
				import mx.controls.Alert;
				import mx.utils.StringUtil;
				import Scripts.ControladorDeModulos;
				import mx.binding.utils.BindingUtils;
				//import eventos.RespostaLoginEvent;
				//import eventos.FechaPopupEvent;
				import mx.rpc.events.ResultEvent;
				import mx.rpc.events.FaultEvent;
	            
	            
//	            private var listaEURPorRoteiro:ArrayCollection = new ArrayCollection();
//	            private var listaEURPorRoteiroECorretor:ArrayCollection = new ArrayCollection();
	            
	            private var roteiro:Roteiro = new Roteiro();
	            private var corretor:Usuario = new Usuario();
	            
	            private function falha(event:FaultEvent):void {
					var mensagem:String;
					try{
						if (event.fault.rootCause.message == null) {
							mensagem = event.fault.faultString;
						} else {
							mensagem = event.fault.rootCause.message;
						}
					}
					catch(e:Error){
						mensagem = "Serviço indisponível, reinicie a operação.";
					}
					ControladorDeModulos.criaModulo("modulos/sistema/MensagemStatus.swf", this, new Array(true, mensagem));
				}
				
				private function fechaJanela():void {
					dispatchEvent(new FechaPopupEvent(this));
				}
				
				/*
				 *	Caso aconteça algum erro no acesso ao controlador, através do HttpService
				 *	então devemos mostra uma mensagem de erro
				 */
				private function lancaEvento(event:FaultEvent):void {
					var e:FaultEvent = new FaultEvent(FaultEvent.FAULT, true, true,
						event.fault, event.token, event.message);
					dispatchEvent(e);
				}
				
				private function init():void {
					
					facade.channelSet = ControladorDeModulos.criaCanal();
					var estado: String = String(ControladorDeModulos.getParam());
					
					getRoteirosFechados();

					var grupos: ArrayCollection = new ArrayCollection();
					grupos.addItem("Grupo A");
					grupos.addItem("Grupo B");
					grupos.addItem("Grupo C");
					grupos.addItem("Grupo D");

					listaEquipesPorRoteiro.dataProvider = grupos;
					listaEquipesPorRoteiroDoCorretor.dataProvider = new ArrayCollection();
				}
				
				public function getRoteirosFechados():void{
					facade.getOperation("getRoteirosFechados").send();
				}
				
				public function getRoteirosFechados_result(event:ResultEvent):void{
					comboRoteiros.dataProvider = event.result;
					comboRoteiros.selectedIndex = -1;
					getCorretores();
				}
				
				public function getCorretores():void{
					facade.getOperation("getCorretores").send();
				}
				
				public function getCorretores_result(event:ResultEvent):void{
					comboCorretores.dataProvider = event.result;
					comboCorretores.selectedIndex = -1;
				}
				
				
				//Change routines
				
				private function listaEquipesSemCorretor():void{
					roteiro = new Roteiro();
					roteiro = CastDeEntidades.castRoteiro(comboRoteiros.itemSelecionado);
					facade.getOperation("getEquipeHasUsuarioHasRoteiroDoRoteiroPorCorretor").send(roteiro.id, 0);
				}
								
				private function listaEquipesSemCorretor_result(event:ResultEvent):void{
					listaEquipesPorRoteiro.dataProvider = event.result;
				}
				
				private function listaEquipesComCorretor():void{
					corretor = new Usuario();
					roteiro = new Roteiro();
					corretor = CastDeEntidades.castUsuario(comboCorretores.itemSelecionado);
					roteiro = CastDeEntidades.castRoteiro(comboRoteiros.itemSelecionado);
					facade.getOperation("getEquipeHasUsuarioHasRoteiroDoRoteiroPorCorretor").send(roteiro.id, corretor.idUsuario);
				}
				
				public function getListaEquipesComCorretor_result(event:ResultEvent):void{
					listaEquipesPorRoteiroDoCorretor.dataProvider = event.result;
				}
				
				
				private function chamaTelaCadastraRoteiro():void{
					ControladorDeModulos.criaModulo("modulos/Views/CadastrarRoteiro.swf", this, null);
				}
				
				private function salvarAgendamento():void{
					dispatchEvent(new FechaPopupEvent(this));
				}
				
				private function adicionaGrupo():void{
					try{
						listaEquipesPorRoteiroDoCorretor.dataProvider.addItem(listaEquipesPorRoteiro.dataProvider.removeItemAt(listaEquipesPorRoteiro.selectedIndex));
					}
					catch(E: Error){}
				}
				
				private function removeGrupo():void{
					try{
						listaEquipesPorRoteiro.dataProvider.addItem(listaEquipesPorRoteiroDoCorretor.dataProvider.removeItemAt(listaEquipesPorRoteiroDoCorretor.selectedIndex));
					}
					catch(E: Error){}
				}
				
				private function limpaListaSelecionados():void{
					listaEquipesPorRoteiroDoCorretor.dataProvider = new ArrayCollection();
				}
				
			]]>
		</mx:Script>
				
		<mx:RemoteObject id="facade" destination="easyCorrection" showBusyCursor="true">
			
		</mx:RemoteObject>
		<mx:Label text="Corretor:" fontWeight="bold"
			textAlign="left" width="74" x="394" y="22" id="labelTitulo"/>
		<mx:Label text="Roteiro:" fontWeight="bold"
			textAlign="left" width="64" x="10" y="22" id="labelTitulo0"/>
		<mx:Label text="Equipes:" fontWeight="bold"
			textAlign="left" width="63" x="10" y="72" id="labelTitulo1"/>
		<comp:ComboBoxAC labelField="nome" x="476" y="21" width="294" change="listaEquipesComCorretor()" id="comboCorretores"/>
		<comp:ComboBoxAC labelField="nome" x="73" y="21" width="304" change="listaEquipesSemCorretor()" id="comboRoteiros"/>
		<mx:HRule x="10" y="61" width="760" height="3"/>
		<mx:List id="listaEquipesPorRoteiro" x="10" y="100" width="352" height="364"/>
		<mx:Label text="Equipes Selecionadas:" fontWeight="bold"
			textAlign="left" width="155" x="418" y="72" id="labelTitulo2"/>
		<mx:List id="listaEquipesPorRoteiroDoCorretor" x="418" y="100" width="352" height="364"></mx:List>
		<mx:Button x="370" y="236" width="40" click="adicionaGrupo()" height="40" icon="@Embed(source='../../image/right.png')" fontStyle="normal" fontWeight="bold" fillAlphas="[0.0, 0.0, 0.0, 0.0]" fillColors="[#FFFFFF, #FFFFFF, #FFFFFF, #FFFFFF]" borderColor="#FFFFFF" cornerRadius="20" themeColor="#37612B" id="button2"/>
		<mx:Button x="370" y="284" width="40" click="removeGrupo()" height="40" icon="@Embed(source='../../image/left.png')" fontStyle="normal" fontWeight="bold" fillAlphas="[0.0, 0.0, 0.0, 0.0]" fillColors="[#FFFFFF, #FFFFFF, #FFFFFF, #FFFFFF]" borderColor="#FFFFFF" cornerRadius="20" themeColor="#37612B" id="button1"/>
		<mx:Label text="Total de Equipes:" fontWeight="bold"
			textAlign="left" width="123" x="10" y="472" id="labelTitulo3"/>
		<mx:Label text="..." fontWeight="bold"
			textAlign="left" width="63" x="128" y="472" id="labelTitulo4"/>
		
		
</les:ModuleTitleWindow>
