<?xml version="1.0" encoding="utf-8"?>
<!--

-->
<les:ModuleTitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
						xmlns:les="modulos.sistema.*" 
						xmlns:comp="com.adobe.flex.extras.controls.*"
						xmlns:extra="br.com.thinklab.util.control.*"
	width="696" height="390" creationComplete="init()" title="Submissão de Roteiro" showCloseButton="true" close="fechaJanela()" layout="absolute">
		
		<mx:Script>
			<![CDATA[
				import eventos.UsuarioEvent;
				import bean.acesso.*;
				import eventos.RespostaLoginEvent;
				import eventos.FechaPopupEvent;
				import mx.utils.Base64Decoder;
				import mx.controls.Image;
				import com.adobe.serialization.json.JSON;
				import mx.controls.Alert;
				import mx.utils.StringUtil;
				import Scripts.ControladorDeModulos;
				import mx.binding.utils.BindingUtils;
				//import eventos.RespostaLoginEvent;
				//import eventos.FechaPopupEvent;
				import mx.rpc.events.ResultEvent;
				import mx.rpc.events.FaultEvent;
				
				private var fileRef:FileReference;
				private var request: URLRequest;
				private const FILE_UPLOAD_URL:String = "http://les.edu.br/easyLabCorrection/";
	            
	            private function falha(event:FaultEvent):void {
					var mensagem:String;
					try{
						if (event.fault.rootCause.message == null) {
							mensagem = event.fault.faultString;
						} else {
							mensagem = event.fault.rootCause.message;
						}
					}
					catch(e:Error){
						mensagem = "Serviço indisponível, reinicie a operação.";
					}
					ControladorDeModulos.criaModulo("modulos/sistema/MensagemStatus.swf", this, new Array(true, mensagem));
				}
				
				private function fechaJanela():void {
					dispatchEvent(new FechaPopupEvent(this));
				}
				
				/*
				 *	Caso aconteça algum erro no acesso ao controlador, através do HttpService
				 *	então devemos mostra uma mensagem de erro
				 */
				private function lancaEvento(event:FaultEvent):void {
					var e:FaultEvent = new FaultEvent(FaultEvent.FAULT, true, true,
						event.fault, event.token, event.message);
					dispatchEvent(e);
				}
				
				private function init():void {
					
					facade.channelSet = ControladorDeModulos.criaCanal();
					var estado: String = String(ControladorDeModulos.getParam());
					
				}
				
				private function escolheArquivo(): void{
					fileRef = new FileReference();
			   	 	fileRef.addEventListener(Event.SELECT, arquivoSelecionado);
			   	 	fileRef.addEventListener(Event.COMPLETE, envioCompleto);
			   	 	fileRef.addEventListener(IOErrorEvent.IO_ERROR, erroEnvio);
			    	fileRef.browse(new Array(new FileFilter("Roteiro","*.zip;")));
				}
				
				public function erroEnvio(evt:Event):void {
			       	var param:Array = new Array(true, "Ocorreu um erro de transmissão. O projeto não foi cadastrado." +
														"\n\nTente novamente! Caso este erro persista..." + 
														"\n\nVerifique se sua conexão com a internet está ativada.");
					ControladorDeModulos.criaModulo("modulos/sistema/MensagemStatus.swf", this, param);
				}
				
				public function arquivoSelecionado(evt:Event):void {
			       	request = new URLRequest(FILE_UPLOAD_URL);
			       	caminho.text = fileRef.name;
				}
				
				public function envioCompleto(evt:Event):void {
					request = new URLRequest(FILE_UPLOAD_URL);
			       	var param:Array = new Array(false, "Roteiro cadastrado com sucesso.");
					ControladorDeModulos.criaModulo("modulos/sistema/MensagemStatus.swf", this, param);
				}
				
				public function cadastraRoteiro(): void{
					dispatchEvent(new FechaPopupEvent(this));
				}
				
				
			]]>
		</mx:Script>
				
		<mx:RemoteObject id="facade" destination="easyCorrection" showBusyCursor="true">
			
		</mx:RemoteObject>
		<mx:Label text="Resultados:" fontWeight="bold"
			textAlign="left" width="121" x="10" y="177" id="labelDescricao"/>
		<mx:TextArea x="10" y="205" width="634" height="127" id="inputDescricao"/>
		<mx:LinkButton x="197.55" y="55" label="   Anexar Roteiro" icon="@Embed(source='../../image/estonar.png')" width="252.9" height="28" id="anexarTestes" click="escolheArquivo()"/>
		<mx:Label x="10" y="88" width="634" id="caminho" textAlign="center"/>
		<mx:Label x="10" y="10" width="69" id="caminho0" textAlign="left" text="Roteiros:" fontWeight="bold"/>
		<mx:Button x="229" y="124" label="   Submeter Roteiro" width="183.9" icon="@Embed(source='../../image/disquete.png')" height="28" id="botaoSubmeterRoteiro" click="cadastraRoteiro()"/>
		<mx:HRule x="10" y="160" width="634" height="9"/>
		<mx:HRule x="10" y="38" width="634" height="10"/>
		<mx:ComboBox x="76" y="8" width="568" id="comboRoteiro"></mx:ComboBox>
		
		
</les:ModuleTitleWindow>
